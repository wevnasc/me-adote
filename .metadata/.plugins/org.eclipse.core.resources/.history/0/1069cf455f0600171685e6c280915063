package com.meadote.adoption.pet;



import java.util.Collection;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMethod;

import com.meadote.adoption.owner.Owner;
import com.meadote.adoption.owner.OwnerRepository;

import static org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo;
import static org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMapping;



@RestController
public class PetController {

	private final PetRepository petRepository;
	private final OwnerRepository ownerRepository;
	

	@Autowired
	public PetController(PetRepository petRepository, OwnerRepository ownerRepository) {
		this.petRepository = petRepository;
		this.ownerRepository = ownerRepository;
	}
	
	@RequestMapping(path = "owners/{ownerId}/pets",method = RequestMethod.GET)
	public Collection<ResponseEntity<Pet>> getAllPetsByOwner(@PathVariable Long ownerId) {
		Collection<Pet> pets = petRepository.findByOwnerId(ownerId);
		return pets.stream().map(pet -> {
			PetResource petResource = new PetResource(pet);
			petResource.add(linkTo(methodOn(PetController.class).getAllPetsByOwner(ownerId)).withSelfRel());
			return new ResponseEntity<Pet>(pet, HttpStatus.OK);
		}).collect(Collectors.toList());
	}
	
	
	@RequestMapping(path = "owners/{ownerId}/pets",method = RequestMethod.POST)
	public Pet add(@PathVariable Long ownerId, @RequestBody Pet input) {
		Owner owner = ownerRepository.findOne(ownerId);
		input.setOwner(owner);
		return petRepository.save(input);
	}
	
}
